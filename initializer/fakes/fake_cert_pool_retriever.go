// This file was generated by counterfeiter
package fakes

import (
	"crypto/x509"
	"sync"

	"code.cloudfoundry.org/executor/initializer"
)

type FakeCertPoolRetriever struct {
	SystemCertsStub        func() *x509.CertPool
	systemCertsMutex       sync.RWMutex
	systemCertsArgsForCall []struct{}
	systemCertsReturns     struct {
		result1 *x509.CertPool
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeCertPoolRetriever) SystemCerts() *x509.CertPool {
	fake.systemCertsMutex.Lock()
	fake.systemCertsArgsForCall = append(fake.systemCertsArgsForCall, struct{}{})
	fake.recordInvocation("SystemCerts", []interface{}{})
	fake.systemCertsMutex.Unlock()
	if fake.SystemCertsStub != nil {
		return fake.SystemCertsStub()
	} else {
		return fake.systemCertsReturns.result1
	}
}

func (fake *FakeCertPoolRetriever) SystemCertsCallCount() int {
	fake.systemCertsMutex.RLock()
	defer fake.systemCertsMutex.RUnlock()
	return len(fake.systemCertsArgsForCall)
}

func (fake *FakeCertPoolRetriever) SystemCertsReturns(result1 *x509.CertPool) {
	fake.SystemCertsStub = nil
	fake.systemCertsReturns = struct {
		result1 *x509.CertPool
	}{result1}
}

func (fake *FakeCertPoolRetriever) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.systemCertsMutex.RLock()
	defer fake.systemCertsMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeCertPoolRetriever) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ initializer.CertPoolRetriever = new(FakeCertPoolRetriever)
