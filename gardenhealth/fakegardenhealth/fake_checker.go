// This file was generated by counterfeiter
package fakegardenhealth

import (
	"sync"

	"github.com/cloudfoundry-incubator/executor/gardenhealth"
	"github.com/pivotal-golang/lager"
)

type FakeChecker struct {
	HealthcheckStub        func(lager.Logger) error
	healthcheckMutex       sync.RWMutex
	healthcheckArgsForCall []struct {
		arg1 lager.Logger
	}
	healthcheckReturns struct {
		result1 error
	}
}

func (fake *FakeChecker) Healthcheck(arg1 lager.Logger) error {
	fake.healthcheckMutex.Lock()
	fake.healthcheckArgsForCall = append(fake.healthcheckArgsForCall, struct {
		arg1 lager.Logger
	}{arg1})
	fake.healthcheckMutex.Unlock()
	if fake.HealthcheckStub != nil {
		return fake.HealthcheckStub(arg1)
	} else {
		return fake.healthcheckReturns.result1
	}
}

func (fake *FakeChecker) HealthcheckCallCount() int {
	fake.healthcheckMutex.RLock()
	defer fake.healthcheckMutex.RUnlock()
	return len(fake.healthcheckArgsForCall)
}

func (fake *FakeChecker) HealthcheckArgsForCall(i int) lager.Logger {
	fake.healthcheckMutex.RLock()
	defer fake.healthcheckMutex.RUnlock()
	return fake.healthcheckArgsForCall[i].arg1
}

func (fake *FakeChecker) HealthcheckReturns(result1 error) {
	fake.HealthcheckStub = nil
	fake.healthcheckReturns = struct {
		result1 error
	}{result1}
}

var _ gardenhealth.Checker = new(FakeChecker)
